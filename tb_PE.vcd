$date
	Wed Mar 26 06:17:53 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_PE $end
$var wire 16 ! C_out [15:0] $end
$var wire 8 " B_out [7:0] $end
$var wire 8 # A_out [7:0] $end
$var parameter 32 $ ACC_WIDTH $end
$var parameter 32 % DATA_WIDTH $end
$var reg 8 & A_in [7:0] $end
$var reg 8 ' B_in [7:0] $end
$var reg 1 ( clk $end
$var reg 1 ) en $end
$var reg 1 * rst_n $end
$scope module uut $end
$var wire 8 + A_in [7:0] $end
$var wire 8 , B_in [7:0] $end
$var wire 1 ( clk $end
$var wire 1 ) en $end
$var wire 1 * rst_n $end
$var parameter 2 - COMPUTE $end
$var parameter 2 . DONE $end
$var parameter 2 / IDLE $end
$var parameter 2 0 READ $end
$var reg 8 1 A_out [7:0] $end
$var reg 8 2 A_reg [7:0] $end
$var reg 8 3 B_out [7:0] $end
$var reg 8 4 B_reg [7:0] $end
$var reg 16 5 C_out [15:0] $end
$var reg 2 6 CurrentState [1:0] $end
$var reg 2 7 NextState [1:0] $end
$var reg 16 8 accumulate [15:0] $end
$var reg 1 9 done $end
$var reg 1 : finish $end
$var reg 16 ; product [15:0] $end
$var reg 1 < start $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 0
b0 /
b11 .
b10 -
b1000 %
b10000 $
$end
#0
$dumpvars
x<
bx ;
x:
x9
bx 8
b0 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b0 ,
b0 +
0*
0)
0(
b0 '
b0 &
bx #
bx "
bx !
$end
#5000
b0 6
0:
09
0<
b0 !
b0 5
b0 "
b0 3
b0 #
b0 1
b0 8
b0 ;
1(
#10000
0(
1*
#15000
1<
1(
#20000
b1 7
0(
1)
#25000
b10 7
b1 6
1(
#30000
0(
#35000
b0 4
b0 2
0<
b10 6
1(
#40000
0(
#45000
b11 7
1:
1(
#50000
0(
#55000
b1 7
b11 6
1(
#60000
0(
b11 '
b11 ,
b101 &
b101 +
#65000
b10 7
b1 6
0:
19
1(
#70000
0(
#75000
b11 4
b101 2
b10 6
1(
#80000
0(
#85000
b11 7
1:
b1111 ;
1(
#90000
0(
#95000
b1 7
b1111 8
b11 6
1(
#100000
0(
#105000
b10 7
b1 6
0:
b1111 !
b1111 5
b11 "
b11 3
b101 #
b101 1
1(
#110000
0(
#115000
b10 6
1(
#120000
0(
b100 '
b100 ,
b10 &
b10 +
#125000
b11 7
1:
b11110 8
1(
#130000
0(
#135000
b1 7
b101101 8
b11 6
1(
#140000
0(
#145000
b10 7
b1 6
0:
b101101 !
b101101 5
1(
#150000
0(
#155000
b100 4
b10 2
b10 6
1(
#160000
0(
#165000
b11 7
1:
b111100 8
b1000 ;
1(
#170000
0(
#175000
b1 7
b1000100 8
b11 6
1(
#180000
0(
b110 '
b110 ,
b111 &
b111 +
#185000
b10 7
b1 6
0:
b1000100 !
b1000100 5
b100 "
b100 3
b10 #
b10 1
1(
#190000
0(
#195000
b110 4
b111 2
b10 6
1(
#200000
0(
#205000
b11 7
1:
b1001100 8
b101010 ;
1(
#210000
0(
#215000
b1 7
b1110110 8
b11 6
1(
#220000
0(
#225000
b10 7
b1 6
0:
b1110110 !
b1110110 5
b110 "
b110 3
b111 #
b111 1
1(
#230000
0(
#235000
b10 6
1(
#240000
0(
b0 '
b0 ,
b0 &
b0 +
0)
#245000
b11 7
1:
b10100000 8
1(
#250000
0(
#255000
b0 7
b11001010 8
b11 6
1(
#260000
0(
#265000
b0 6
0:
b11001010 !
b11001010 5
1(
#270000
0(
#275000
09
1<
1(
#280000
0(
#285000
1(
#290000
0(
#295000
1(
#300000
0(
#305000
1(
#310000
0(
#315000
1(
#320000
0(
#325000
1(
#330000
0(
#335000
1(
#340000
0(
#345000
1(
#350000
0(
#355000
1(
#360000
0(
#365000
1(
#370000
0(
#375000
1(
#380000
0(
#385000
1(
#390000
0(
#395000
1(
#400000
0(
#405000
1(
#410000
0(
#415000
1(
#420000
0(
#425000
1(
#430000
0(
#435000
1(
#440000
0(
